// I로 만들기

/*
문제
알파벳 소문자로 이루어진 문자열 myString이 주어집니다. 알파벳 순서에서 “I”보디 앞서는 모든 문자를 “I”로 바꾼 문자열을 return하는 solution 함수를 완성해 주세요.
*/

function solution(myString) {
  return myString.replace(/[a-k]/g, 'l');
}

console.log(solution('abcdexyz')); // "lllllxyz"
/*
고민
- 먼저 전개연산자를 사용해서 문자열을 뜯어준다.
- 대문자 I와 비교를해준 뒤 I보다 앞이라면 I로 바꿔준다.

해결
- 나는 전개연산자를 사용하여 문자열을 쪼개주면 된다고 생각했다.
- 전개연산자를 사용하게 된다면 배열안에 문자열이 하나씩 쪼개진 상태로 배열이 된다.  
- 하지만 내가 사용하려고 하는 replace() 메서드를 사용을 하기 위해서는 전개 연산자를 사용하면 안된다. 
- 왜냐하면 replace() 메서드는 string 형태의 prototype이기 때문에 배열 형태의 요소를 return 해 줄 수 없기 때문이다.
- 그 후 정규표현식을 사용해서 알파벳의 범위를 정해 주고 []를 사용해서 대괄호 안에 있는 문자와 일치하는 지를 확인해주는 역할을 만들었다.
- g를 사용해서 global 즉, 전체를 확인하여 일치하는지를 설정해주었다. 
*/
